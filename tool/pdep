#!/usr/bin/env php
<?php
function usage() {
    global $argv;
	echo <<<EOT
    Usage: {$argv[0]} [options] [files or classes...]

     -c Find classes that depend on the passed files or classes

     -f Find files that depend on the passed files or classes

     -g Graphviz dot output

     -d <depth_level>
        When walking the dependency graph, limit it to this depth. For
        example,

          {$argv[0]} -f -d 1 MyClass

        would show only the files that directly depend on MyClass.

     -h This help

    If no filenames or classnames are provided, it will generate the
    full dependency tree.

    Note that this tool will read your local .phan/config and pick out
    the list of files to scan/not scan from there. If you rely on an
    externally-generated filelist, you will need to hack this {$argv[0]}
    tool a bit to add that.

    Examples:

        {$argv[0]} -f src/Phan/PluginV3/PluginAwarePreAnalysisVisitor.php

        {$argv[0]} -c -g '\Phan\PluginV3\PluginAwarePreAnalysisVisitor' | dot -Tpng > graph.png

        {$argv[0]} -c -d 2 -g '\Phan\Language\Type\ClassStringType' | dot -Kfdp -Tpng > graph.png

    EOT;
    exit;
}

$tool_dir = dirname($argv[0]);
$depth = 0;
$options = getopt("cfghd:");
foreach (array_keys($options) as $opt) switch ($opt) {
    case 'c':
        array_shift($argv);
        $mode = "class";
        break;
    case 'f':
        array_shift($argv);
        $mode = "file";
        break;
    case 'g':
        array_shift($argv);
        $cmd = "graph";
        break;
    case 'd':
        array_shift($argv);
        array_shift($argv);
        $depth = $options[$opt];;
        break;
    case 'h':
        usage();
        break;
}
array_shift($argv);
$arg_string = implode(' ', $argv);

system("PDEP_CMD=$cmd PDEP_MODE=$mode PDEP_DEPTH=$depth PDEP_ARGS='$arg_string' bash -c 'phan --quick -j1 -P {$tool_dir}/../.phan/plugins/DependencyGraphPlugin.php -k {$tool_dir}/pdep_config.php'");
